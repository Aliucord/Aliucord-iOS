let socket;function setUpDebugWS(){connectWebsocket("localhost:9090");const e=nativeLoggingHook;globalThis.nativeLoggingHook=(t,n)=>((socket==null?void 0:socket.readyState)===WebSocket.OPEN&&socket.send(JSON.stringify({level:n,message:t})),e(t,n))}function connectWebsocket(host){console.log("Connecting to debug ws"),socket!==void 0&&socket.readyState!==WebSocket.CLOSED&&(socket.close(),socket=null),socket=new WebSocket(`ws://${host}`),socket.addEventListener("open",()=>console.log("Connected with debug websocket")),socket.addEventListener("error",e=>console.log("Error with debug websocket: ",e.message)),socket.addEventListener("message",message=>{try{console.log(eval(message.data))}catch(e){console.error(e)}})}function getModule(e,t=!0){const n=Object.keys(modules).map(o=>Number(o)).find(o=>o>=940&&o<=968||o==199||o==432||o==433||o==444||o==445||o==456?!1:__r(o)&&e(__r(o)));if(n===void 0)return null;const s=modules[n].publicModule;return t?s.exports:s}window.getModule=getModule;var getRandomValues,rnds8=new Uint8Array(16);function rng(){if(!getRandomValues&&(getRandomValues=typeof crypto!="undefined"&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto)||typeof msCrypto!="undefined"&&typeof msCrypto.getRandomValues=="function"&&msCrypto.getRandomValues.bind(msCrypto),!getRandomValues))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return getRandomValues(rnds8)}var REGEX=/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;function validate(e){return typeof e=="string"&&REGEX.test(e)}for(var byteToHex=[],i=0;i<256;++i)byteToHex.push((i+256).toString(16).substr(1));function stringify(e){var t=arguments.length>1&&arguments[1]!==void 0?arguments[1]:0,n=(byteToHex[e[t+0]]+byteToHex[e[t+1]]+byteToHex[e[t+2]]+byteToHex[e[t+3]]+"-"+byteToHex[e[t+4]]+byteToHex[e[t+5]]+"-"+byteToHex[e[t+6]]+byteToHex[e[t+7]]+"-"+byteToHex[e[t+8]]+byteToHex[e[t+9]]+"-"+byteToHex[e[t+10]]+byteToHex[e[t+11]]+byteToHex[e[t+12]]+byteToHex[e[t+13]]+byteToHex[e[t+14]]+byteToHex[e[t+15]]).toLowerCase();if(!validate(n))throw TypeError("Stringified UUID is invalid");return n}function v4(e,t,n){e=e||{};var s=e.random||(e.rng||rng)();if(s[6]=s[6]&15|64,s[8]=s[8]&63|128,t){n=n||0;for(var o=0;o<16;++o)t[n+o]=s[o];return t}return stringify(s)}var __async=(e,t,n)=>new Promise((s,o)=>{var c=r=>{try{u(n.next(r))}catch(a){o(a)}},g=r=>{try{u(n.throw(r))}catch(a){o(a)}},u=r=>r.done?s(r.value):Promise.resolve(r.value).then(c,g);u((n=n.apply(e,t)).next())});const linkingModule=getModule(e=>e.openURL);function sendCommand(e){return __async(this,arguments,function*(t,n=[]){return new Promise((s,o)=>{const c=v4(),g={command:t,id:c,params:n};linkingModule.openURL(`aliucord://${JSON.stringify(g)}`).then(()=>{const u=linkingModule.addEventListener("url",r=>{let a=r.url;if(!!a.includes("aliucord://")){a=decodeURIComponent(a.replace("aliucord://",""));try{const l=JSON.parse(a);if(l.id!==c||l.data===void 0)return;u.remove(),s(l)}catch(l){return}}})})})})}var ApplicationCommandTarget=(e=>(e[e.Chat=1]="Chat",e[e.User=2]="User",e[e.Message=3]="Message",e))(ApplicationCommandTarget||{}),ApplicationCommandType=(e=>(e[e.BuiltIn=0]="BuiltIn",e[e.BuiltInText=1]="BuiltInText",e[e.BuiltInIntegration=2]="BuiltInIntegration",e[e.Bot=3]="Bot",e[e.Placeholder=4]="Placeholder",e))(ApplicationCommandType||{}),ApplicationCommandOptionType=(e=>(e[e.SubCommand=1]="SubCommand",e[e.SubCommandGroup=2]="SubCommandGroup",e[e.String=3]="String",e[e.Integer=4]="Integer",e[e.Boolean=5]="Boolean",e[e.User=6]="User",e[e.Channel=7]="Channel",e[e.Role=8]="Role",e[e.Mentionnable=9]="Mentionnable",e[e.Number=10]="Number",e))(ApplicationCommandOptionType||{}),__defProp=Object.defineProperty,__defProps=Object.defineProperties,__getOwnPropDescs=Object.getOwnPropertyDescriptors,__getOwnPropSymbols=Object.getOwnPropertySymbols,__hasOwnProp=Object.prototype.hasOwnProperty,__propIsEnum=Object.prototype.propertyIsEnumerable,__defNormalProp=(e,t,n)=>t in e?__defProp(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,__spreadValues=(e,t)=>{for(var n in t||(t={}))__hasOwnProp.call(t,n)&&__defNormalProp(e,n,t[n]);if(__getOwnPropSymbols)for(var n of __getOwnPropSymbols(t))__propIsEnum.call(t,n)&&__defNormalProp(e,n,t[n]);return e},__spreadProps=(e,t)=>__defProps(e,__getOwnPropDescs(t));function injectPluginsManager(){const e=getModule(r=>r.getBuiltInCommands,!1),t=getModule(r=>{var a;return(a=r.default)==null?void 0:a.sendBotMessage},!0),n={id:"-3",type:0,name:"Aliucord"},s=e.exports.BUILT_IN_SECTIONS;e.exports.BUILT_IN_SECTIONS=__spreadProps(__spreadValues({},s),{[n.id]:n});const o={id:"installed-plugins",applicationId:n.id,name:"plugins",description:"List installed plugins.",target:ApplicationCommandTarget.Chat,type:ApplicationCommandType.BuiltIn,execute:(r,a)=>{const l=a.channel;sendCommand("list-plugins").then(m=>{const d=m.data;t.default.sendBotMessage(l.id,d==""?"No plugins installed.":`**Plugins installed (${d.split(",").length})**: ${d.split(",").join(", ")}`)})}},c={id:"install-plugin",applicationId:n.id,name:"install",description:"Install a plugin.",target:ApplicationCommandTarget.Chat,type:ApplicationCommandType.BuiltIn,options:[{name:"plugin",description:"Plugin url",required:!0,type:ApplicationCommandOptionType.String}],execute:(r,a)=>{const l=r[0].value,m=a.channel;sendCommand("install-plugin",[l]).then(d=>{t.default.sendBotMessage(m.id,d.data)})}},g={id:"uninstall-plugin",applicationId:n.id,name:"uninstall",description:"Uninstall a plugin.",target:ApplicationCommandTarget.Chat,type:ApplicationCommandType.BuiltIn,options:[{name:"plugin",description:"Plugin name",required:!0,type:ApplicationCommandOptionType.String}],execute:(r,a)=>{console.log(r);const l=r[0].value,m=a.channel;sendCommand("uninstall-plugin",[l]).then(d=>{t.default.sendBotMessage(m.id,d.data)})}},u=[o,c,g];e.exports.BUILT_IN_COMMANDS.push(...u)}function injectCommands(){const e=getModule(n=>n.getBuiltInCommands,!1),t=[{id:"websocket-devtools",name:"websocket",description:"Connect to the websocket devtools.",applicationId:"-3",target:ApplicationCommandTarget.Chat,type:ApplicationCommandType.BuiltIn,options:[{name:"host",description:"Host of the debugger.",type:ApplicationCommandOptionType.String,required:!0}],execute:function(n,s){const o=n[0].value;connectWebsocket(o)}},{id:"debug-command",name:"doctor",description:"Print out your device information.",applicationId:"-3",target:ApplicationCommandTarget.Chat,type:ApplicationCommandType.BuiltInText,execute:function(n){return{content:"Sexo"}}},{id:"reload-command",name:"reload",description:"Reload Discord.",applicationId:"-3",target:ApplicationCommandTarget.Chat,type:ApplicationCommandType.BuiltIn,execute:function(n){getModule(s=>s.NativeModules).NativeModules.BundleUpdaterManager.reload()}}];e.exports.BUILT_IN_COMMANDS.push(...t)}try{setUpDebugWS(),injectPluginsManager(),injectCommands()}catch(e){console.error(e)}
