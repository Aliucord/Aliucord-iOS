function modulesBlacklist(e){return e==199||e==432||e==433||e==444||e==445||e==456||e>=944&&e<=972}function getModule(e,t=!0){const n=getModules(e,!0);if(n.length===0)return;const{publicModule:o}=modules[n[0]];return t?o.exports:o}function getModules(e,t=!1){const n=s=>{if(modulesBlacklist(s))return;const a=modules[s];if(a.isInitialized||__r(Number(s)),a.publicModule.exports!==void 0)return e(a.publicModule.exports)};return(t?[Object.keys(modules).find(n)]:Object.keys(modules).filter(n)).filter(s=>s!==void 0).map(s=>Number(s))}function getModuleByProps(...e){return getModule(t=>e.every(n=>t[n]),!0)}function getModuleByIndex(e){const t=modules[e];if(t!==void 0)return t.isInitialized||__r(Number(e)),t.publicModule}const assetsModule=getModule(e=>e.registerAsset);function getAssetByName(e){let t,n=1;for(;t=assetsModule.getAssetByID(n),!(t===void 0||t.name===e);)n++;return{id:n,...t}}function getAssets(){const e=[];let t=1;for(;;){const n=assetsModule.getAssetByID(t);if(n===void 0)break;e.push({id:t,...n}),t++}return e}const patches=[];function getPatchesByCaller(e){const t=[];for(const n of patches)for(const o of n.patches)o.caller===e&&t.push(o);return t}function unpatchAll(e){const t=getPatchesByCaller(e);if(!!t.length)for(const n of t)n.unpatch()}function override(e){return function(){if(!e.patches.length)return e.original.apply(this,arguments);let t,n=arguments;for(const s of e.patches.filter(a=>a.type==="before"))try{const a=s.callback(this,n,e.original.bind(this));Array.isArray(a)&&(n=a)}catch(a){console.error(`Could not fire before patch for ${e.func} of ${s.caller}`),console.error(a)}const o=e.patches.filter(s=>s.type==="instead");if(!o.length)t=e.original.apply(this,n);else for(const s of o)try{const a=s.callback(this,n,e.original.bind(this));a!==void 0&&(t=a)}catch(a){console.error(`Could not fire instead patch for ${e.func} of ${s.caller}`),console.error(a)}for(const s of e.patches.filter(a=>a.type==="after"))try{const a=s.callback(this,n,t,r=>t=r);a!==void 0&&(t=a)}catch(a){console.error(`Could not fire after patch for ${e.func} of ${s.caller}`),console.error(a)}return t}}function push([e,t,n]){const o={caller:e,mdl:t,func:n,original:t[n],unpatch:()=>{o.mdl[o.func]=o.original,o.patches=[]},patches:[]};return t[n]=override(o),Object.assign(t[n],o.original,{toString:()=>o.original.toString(),__original:o.original}),patches.push(o),o}function get$1(e,t,n){const o=patches.find(s=>s.mdl==t&&s.func==n);return o||push([e,t,n])}function patch$1(e,t,n,o,s="after"){const a=get$1(e,t,n),r={caller:e,type:s,id:a.patches.length,callback:o,unpatch:()=>{if(a.patches.splice(a.patches.findIndex(c=>c.id===r.id&&c.type===s),1),a.patches.length<=0){const c=patches.findIndex(l=>l.mdl===t&&l.func===n);patches[c].unpatch(),patches.splice(c,1)}}};return a.patches.push(r),r.unpatch}function create(e){return{getPatchesByCaller,before:(...t)=>before(e,...t),instead:(...t)=>instead(e,...t),after:(...t)=>after(e,...t),unpatchAll:()=>unpatchAll(e)}}function before(e,t,n,o){patch$1(e,t,n,o,"before")}function instead(e,t,n,o){patch$1(e,t,n,o,"instead")}function after(e,t,n,o){patch$1(e,t,n,o,"after")}const clydeModule=getModule(e=>{var t;return(t=e.default)==null?void 0:t.sendBotMessage});function sendReply(e,t){clydeModule.default.sendBotMessage(e,t)}const Patcher=create("aliucord-commands"),Commands=getModuleByProps("getBuiltInCommands"),Discovery=getModuleByProps("useApplicationCommandsDiscoveryState"),Icons=getModuleByProps("getIconURL");let commands$1=[];const section={id:"aliucord",type:1,name:"Aliucord"};Patcher.after(Commands,"getBuiltInCommands",(e,t,n)=>[...n,...commands$1]),Patcher.after(Icons,"getIconURL",(e,t)=>{var n;if(((n=t==null?void 0:t[1])==null?void 0:n.id)==="aliucord")return"https://cdn.discordapp.com/icons/811255666990907402/912861e37f0efa5c77729592ea8f7b8f.png?size=256"}),Patcher.after(Discovery,"useApplicationCommandsDiscoveryState",(e,t,n)=>{var o;if(!n.discoverySections.find(a=>a.key==section.id)&&commands$1.length){const a=[...commands$1.values()];n.applicationCommandSections.push(section),n.discoveryCommands.push(...a),n.commands.push(...a.filter(r=>!n.commands.some(c=>c.name===r.name))),n.discoverySections.push({data:a,key:section.id,section}),n.sectionsOffset.push(commands$1.length)}const s=n.discoverySections.findIndex(a=>a.key==="-2");if((o=n.discoverySections[s])==null?void 0:o.data){const a=n.discoverySections[s];a.data=a.data.filter(r=>!r.__aliucord),a.data.length==0&&n.discoverySections.splice(s,1)}});function registerCommands(e,t){t.map(n=>{n.__aliucord=!0,n.caller=e}),commands$1.push(...t)}function unregisterCommands(e){commands$1=commands$1.filter(t=>t.caller!=e)}const dialogModule=getModule(e=>{var t;return(t=e.default)==null?void 0:t.show});function showDialog(e){dialogModule.default.show(e)}const nativeModules=getModule(e=>e.NativeModules).NativeModules;function reloadDiscord(){nativeModules.BundleUpdaterManager.reload()}function getVersion(){return nativeModules.InfoDictionaryManager.Version}function getBuild(){return nativeModules.InfoDictionaryManager.Build}function getDevice(){return nativeModules.DCDDeviceManager.device}function getSystemVersion(){return nativeModules.DCDDeviceManager.systemVersion}const restModule=getModule(e=>{var t;return(t=e.default)==null?void 0:t.getAPIBaseURL});async function get(e){return restModule.default.get(e)}async function post(e){return restModule.default.post(e)}async function put(e){return restModule.default.put(e)}async function patch(e){return restModule.default.patch(e)}async function _delete(e){return restModule.default.delete(e)}async function getAPIBaseURL(){return restModule.default.getAPIBaseURL()}const storageModule=getModule(e=>e.getItem);async function getItem(e){return storageModule.getItem(e)}async function setItem(e,t){return storageModule.setItem(e,t)}async function removeItem(e){return storageModule.removeItem(e)}var getRandomValues,rnds8=new Uint8Array(16);function rng(){if(!getRandomValues&&(getRandomValues=typeof crypto!="undefined"&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto)||typeof msCrypto!="undefined"&&typeof msCrypto.getRandomValues=="function"&&msCrypto.getRandomValues.bind(msCrypto),!getRandomValues))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return getRandomValues(rnds8)}var REGEX=/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;function validate(e){return typeof e=="string"&&REGEX.test(e)}for(var byteToHex=[],i=0;i<256;++i)byteToHex.push((i+256).toString(16).substr(1));function stringify(e){var t=arguments.length>1&&arguments[1]!==void 0?arguments[1]:0,n=(byteToHex[e[t+0]]+byteToHex[e[t+1]]+byteToHex[e[t+2]]+byteToHex[e[t+3]]+"-"+byteToHex[e[t+4]]+byteToHex[e[t+5]]+"-"+byteToHex[e[t+6]]+byteToHex[e[t+7]]+"-"+byteToHex[e[t+8]]+byteToHex[e[t+9]]+"-"+byteToHex[e[t+10]]+byteToHex[e[t+11]]+byteToHex[e[t+12]]+byteToHex[e[t+13]]+byteToHex[e[t+14]]+byteToHex[e[t+15]]).toLowerCase();if(!validate(n))throw TypeError("Stringified UUID is invalid");return n}function v4(e,t,n){e=e||{};var o=e.random||(e.rng||rng)();if(o[6]=o[6]&15|64,o[8]=o[8]&63|128,t){n=n||0;for(var s=0;s<16;++s)t[n+s]=o[s];return t}return stringify(o)}const linkingModule=getModule(e=>e.openURL);async function sendCommand(e,t=[]){return new Promise((n,o)=>{const s=v4(),a={command:e,id:s,params:t};linkingModule.openURL(`aliucord://${JSON.stringify(a)}`).then(()=>{const r=linkingModule.addEventListener("url",c=>{let l=c.url;if(!!l.includes("aliucord://")){l=decodeURIComponent(l.replace("aliucord://",""));try{const u=JSON.parse(l);if(u.id!==s||u.data===void 0)return;r.remove(),n(u)}catch{return}}})})})}const LocaleSettings=getModule(e=>{var t;return(t=e.default)==null?void 0:t.updateLocalSettings}),Theme=getModule(e=>{var t;return(t=e.default)==null?void 0:t.theme}).default.theme,ColorsModule=getModuleByProps("HEXColors"),ThemeColorMap=getModule(e=>{var t;return(t=e.default)==null?void 0:t.HEADER_PRIMARY}),Colors=getModule(e=>{var t;return(t=e.default)==null?void 0:t.PRIMARY_DARK}),themer=()=>window.aliucord.themer;async function prepareThemer(){let e=await getItem("theme");e!==null&&(e=JSON.parse(e),applyColours(e),themer().theme=e.name)}function getTheme(){return themer().theme}function getThemeByName(e){return themer().themes.find(t=>t.name===e)}function listThemes(){return themer().themes.map(e=>e.name)}function applyColours(e){const t={...ThemeColorMap.default,...e.theme_color_map},n={...Colors.default,...e.colors};ThemeColorMap.default=t,ColorsModule.Colors=n,LocaleSettings.default.updateLocalSettings({theme:Theme,sync:!1})}async function applyTheme(e){themer().theme=e;const t=getThemeByName(e);return setItem("theme",JSON.stringify(t)),applyColours(t),(await sendCommand("apply-theme",[Theme,JSON.stringify(t.theme_color_map)])).data}function registerTheme(e){themer().themes.push(e)}function removeTheme(){}const toastModule=getModule(e=>{var t,n,o,s,a;return((t=e.default)==null?void 0:t.open)&&((n=e.default)==null?void 0:n.close)&&!((o=e.default)==null?void 0:o.openLazy)&&!((s=e.default)==null?void 0:s.startDrag)&&!((a=e.default)==null?void 0:a.init)});function showToast(e){toastModule.default.open(e)}const tokenModule=getModule(e=>{var t;return(t=e.default)==null?void 0:t.setToken});function getToken(){return tokenModule.default.getToken()}function setToken(e){return tokenModule.default.setToken(e)}function hideToken(){tokenModule.default.hideToken()}function showToken(){tokenModule.default.showToken()}function removeToken(){tokenModule.default.removeToken()}const userModule=getModule(e=>e.fetchProfile);async function fetchCurrentUser(){return userModule.fetchCurrentUser()}async function fetchProfile(e){return userModule.fetchProfile(e)}async function getUser(e){return userModule.getUser(e)}function prepareApi(){window.aliucord={getModule,getModules,getModuleByProps,getModuleByIndex,getAssetByName,getAssets,themer:{theme:"",themes:[],getTheme,getThemeByName,listThemes,applyTheme,registerTheme,removeTheme},patcher:{create,before,instead,after},clyde:{sendReply},commands:{registerCommands,unregisterCommands},dialog:{showDialog},native:{reloadDiscord,getVersion,getBuild,getDevice,getSystemVersion},rest:{get,post,put,patch,delete:_delete,getAPIBaseURL},storage:{getItem,setItem,removeItem},toast:{showToast},token:{getToken,setToken,hideToken,showToken,removeToken},users:{fetchCurrentUser,fetchProfile,getUser}}}let socket;function prepareWebsocket(){connectWebsocket("localhost:9090");const e=nativeLoggingHook;globalThis.nativeLoggingHook=(t,n)=>((socket==null?void 0:socket.readyState)===WebSocket.OPEN&&socket.send(JSON.stringify({level:n,message:t})),e(t,n))}function connectWebsocket(host){console.log("Connecting to debug ws"),socket!==void 0&&socket.readyState!==WebSocket.CLOSED&&(socket.close(),socket=null),socket=new WebSocket(`ws://${host}`),socket.addEventListener("open",()=>{console.log("Connected with debug websocket"),showToast({content:"Connected to the websocket server."})}),socket.addEventListener("error",e=>{console.log("Error with debug websocket: ",e.message),showToast({content:"An error occured with the websocket connection."})}),socket.addEventListener("close",e=>{console.log("Error with debug websocket: ",e.message),showToast({content:"The websocket connection has been closed."})}),socket.addEventListener("message",message=>{try{console.log(eval(message.data))}catch(e){console.error(e)}})}function sendMessage(e){(socket==null?void 0:socket.readyState)===WebSocket.OPEN&&socket.send(e)}var commands={};Object.defineProperty(commands,"__esModule",{value:!0}),commands.InteractionTypes=ApplicationCommandOptionType_1=commands.ApplicationCommandOptionType=commands.ApplicationCommandPermissionType=ApplicationCommandInputType_1=commands.ApplicationCommandInputType=ApplicationCommandType_1=commands.ApplicationCommandType=commands.ApplicationCommandSectionType=void 0;var ApplicationCommandSectionType;(function(e){e[e.BuiltIn=0]="BuiltIn",e[e.Guild=1]="Guild",e[e.DM=2]="DM"})(ApplicationCommandSectionType||(ApplicationCommandSectionType={})),commands.ApplicationCommandSectionType=ApplicationCommandSectionType;var ApplicationCommandType;(function(e){e[e.Chat=1]="Chat",e[e.User=2]="User",e[e.Message=3]="Message"})(ApplicationCommandType||(ApplicationCommandType={}));var ApplicationCommandType_1=commands.ApplicationCommandType=ApplicationCommandType,ApplicationCommandInputType;(function(e){e[e.BuiltIn=0]="BuiltIn",e[e.BuiltInText=1]="BuiltInText",e[e.BuiltInIntegration=2]="BuiltInIntegration",e[e.Bot=3]="Bot",e[e.Placeholder=4]="Placeholder"})(ApplicationCommandInputType||(ApplicationCommandInputType={}));var ApplicationCommandInputType_1=commands.ApplicationCommandInputType=ApplicationCommandInputType,ApplicationCommandPermissionType;(function(e){e[e.Role=1]="Role",e[e.User=2]="User"})(ApplicationCommandPermissionType||(ApplicationCommandPermissionType={})),commands.ApplicationCommandPermissionType=ApplicationCommandPermissionType;var ApplicationCommandOptionType;(function(e){e[e.SubCommand=1]="SubCommand",e[e.SubCommandGroup=2]="SubCommandGroup",e[e.String=3]="String",e[e.Integer=4]="Integer",e[e.Boolean=5]="Boolean",e[e.User=6]="User",e[e.Channel=7]="Channel",e[e.Role=8]="Role",e[e.Mentionnable=9]="Mentionnable",e[e.Number=10]="Number"})(ApplicationCommandOptionType||(ApplicationCommandOptionType={}));var ApplicationCommandOptionType_1=commands.ApplicationCommandOptionType=ApplicationCommandOptionType,InteractionTypes;(function(e){e[e.ApplicationCommand=2]="ApplicationCommand",e[e.MessageComponent=3]="MessageComponent"})(InteractionTypes||(InteractionTypes={})),commands.InteractionTypes=InteractionTypes;const list={id:"installed-plugins",applicationId:section.id,name:"plugins",description:"List installed plugins.",type:ApplicationCommandType_1.Chat,inputType:ApplicationCommandInputType_1.BuiltIn,execute:(e,t)=>{const n=t.channel;sendCommand("list-plugins").then(o=>{const s=o.data;sendReply(n.id,s==""?"No plugins installed.":`**Plugins installed (${s.split(",").length})**: ${s.split(",").join(", ")}`)})}},install={id:"install-plugin",applicationId:section.id,name:"install",description:"Install a plugin.",type:ApplicationCommandType_1.Chat,inputType:ApplicationCommandInputType_1.BuiltIn,options:[{name:"plugin",description:"Plugin url",required:!0,type:ApplicationCommandOptionType_1.String}],execute:(e,t)=>{const n=e[0].value,o=t.channel;sendCommand("install-plugin",[n]).then(s=>{sendReply(o.id,s.data)})}},uninstall={id:"uninstall-plugin",applicationId:section.id,name:"uninstall",description:"Uninstall a plugin.",type:ApplicationCommandType_1.Chat,inputType:ApplicationCommandInputType_1.BuiltIn,options:[{name:"plugin",description:"Plugin name",required:!0,type:ApplicationCommandOptionType_1.String}],execute:(e,t)=>{const n=e[0].value,o=t.channel;sendCommand("uninstall-plugin",[n]).then(s=>{sendReply(o.id,s.data)})}};var plugins=[list,install,uninstall];const connect={id:"websocket-devtools",name:"websocket",description:"Connect to the websocket devtools.",applicationId:section.id,type:ApplicationCommandType_1.Chat,inputType:ApplicationCommandInputType_1.BuiltIn,options:[{name:"host",description:"Host of the debugger.",type:ApplicationCommandOptionType_1.String,required:!0}],execute:e=>{const t=e[0].value;connectWebsocket(t)}},dump={id:"dump-command",name:"dump",description:"Dump Discord's modules.",applicationId:section.id,type:ApplicationCommandType_1.Chat,inputType:ApplicationCommandInputType_1.BuiltIn,execute:function(e,t){var n;const o=t.channel.id,s=window.modules;function a(r){if(typeof r=="function")return r.toString();if(Array.isArray(r))return r.map(a);if(typeof r=="object"){const c={};for(const l in r)c[l]=a(r[l]);return c}return r}for(const r of Object.keys(s))try{const c=s[r],l={id:r};if(!((n=c.publicModule)==null?void 0:n.exports))continue;const u=c.publicModule.exports;for(const d of Object.keys(c.publicModule.exports))l[d]=a(u[d]);sendMessage(JSON.stringify(l,null,"	"))}catch(c){console.log(`Couldn't dump module ${r}`),console.log(c)}sendReply(o,"Modules has been dumped.")}};var websocket=[connect,dump];const debug={id:"debug-command",name:"debug",description:"Print out your device information.",applicationId:section.id,type:ApplicationCommandType_1.Chat,inputType:ApplicationCommandInputType_1.BuiltInText,execute:()=>{let e=`**Debug Info:**
`;return e+=`> Discord: ${getVersion()} (${getBuild()})
`,e+=`> Device: ${getDevice()}
`,e+=`> System: ${getSystemVersion()}
`,{content:e}}},reload={id:"reload-command",name:"reload",description:"Reload Discord.",applicationId:section.id,type:ApplicationCommandType_1.Chat,inputType:ApplicationCommandInputType_1.BuiltIn,execute:function(e){reloadDiscord()}},token={id:"token-command",name:"token",description:"Show your Discord'token.",applicationId:section.id,type:ApplicationCommandType_1.Chat,inputType:ApplicationCommandInputType_1.BuiltIn,execute:function(e,t){const n=getToken(),o=t.channel.id;sendReply(o,`\`${n}\``)}};var utils=[debug,reload,token];const themes={id:"list-themes",applicationId:section.id,name:"themes",description:"List available themes",type:ApplicationCommandType_1.Chat,inputType:ApplicationCommandInputType_1.BuiltIn,execute:(e,t)=>{const n=listThemes();sendReply(t.channel.id,`**Installed themes (${n.length})**: ${n.join(", ")}`)}},apply={id:"apply-theme",applicationId:section.id,name:"apply",description:"Apply a theme",type:ApplicationCommandType_1.Chat,inputType:ApplicationCommandInputType_1.BuiltIn,options:[{name:"name",description:"Theme's name",type:ApplicationCommandOptionType_1.String,required:!0}],execute:(e,t)=>{const n=e[0].value;getThemeByName(n)||sendReply(t.channel.id,"Theme couldn't be found."),applyTheme(n).then(s=>{sendReply(t.channel.id,"Theme has been applied. Use `/reload` to reload the app.")})}},clear={id:"clear-theme",applicationId:section.id,name:"clear",description:"Remove applied theme",type:ApplicationCommandType_1.Chat,inputType:ApplicationCommandInputType_1.BuiltIn,execute:(e,t)=>{console.log("sex")}};var themes$1=[themes,apply,clear];function prepareCommands(){const e=[...plugins,...websocket,...utils,...themes$1];registerCommands("aliucord",e)}try{prepareApi(),prepareThemer(),prepareWebsocket(),prepareCommands()}catch(e){console.error(e)}
