let socket;function setUpDebugWS(){connectWebsocket("localhost:9090");const e=nativeLoggingHook;globalThis.nativeLoggingHook=(n,o)=>((socket==null?void 0:socket.readyState)===WebSocket.OPEN&&socket.send(JSON.stringify({level:o,message:n})),e(n,o))}function connectWebsocket(host){console.log("Connecting to debug ws"),socket!==void 0&&socket.readyState!==WebSocket.CLOSED&&(socket.close(),socket=null),socket=new WebSocket(`ws://${host}`),socket.addEventListener("open",()=>console.log("Connected with debug websocket")),socket.addEventListener("error",e=>console.log("Error with debug websocket: ",e.message)),socket.addEventListener("message",message=>{try{console.log(eval(message.data))}catch(e){console.error(e)}})}var commands$1={},module$1={};Object.defineProperty(module$1,"__esModule",{value:!0}),module$1.getModule=void 0;function getModule$1(e,n=!0){return window.getModule(e,n)}module$1.getModule=getModule$1,Object.defineProperty(commands$1,"__esModule",{value:!0});var registerCommands_1=commands$1.registerCommands=AliucordSectionID_1=commands$1.AliucordSectionID=void 0;const module_1$2=module$1,commandsModule=(0,module_1$2.getModule)(e=>e.getBuiltInCommands,!1),AliucordSectionID="-3";var AliucordSectionID_1=commands$1.AliucordSectionID=AliucordSectionID;function registerCommands(e){commandsModule.exports.BUILT_IN_COMMANDS.push(...e)}registerCommands_1=commands$1.registerCommands=registerCommands;var clyde={};Object.defineProperty(clyde,"__esModule",{value:!0});var sendReply_1=clyde.sendReply=void 0;const module_1$1=module$1,clydeModule=(0,module_1$1.getModule)(e=>{var n;return(n=e.default)===null||n===void 0?void 0:n.sendBotMessage},!1);function sendReply(e,n){clydeModule.exports.default.sendBotMessage(e,n)}sendReply_1=clyde.sendReply=sendReply;var commands={};Object.defineProperty(commands,"__esModule",{value:!0}),commands.InteractionTypes=ApplicationCommandOptionType_1=commands.ApplicationCommandOptionType=commands.ApplicationCommandPermissionType=ApplicationCommandType_1=commands.ApplicationCommandType=ApplicationCommandTarget_1=commands.ApplicationCommandTarget=commands.ApplicationCommandSectionType=void 0;var ApplicationCommandSectionType;(function(e){e[e.BuiltIn=0]="BuiltIn",e[e.Guild=1]="Guild",e[e.DM=2]="DM"})(ApplicationCommandSectionType||(ApplicationCommandSectionType={})),commands.ApplicationCommandSectionType=ApplicationCommandSectionType;var ApplicationCommandTarget;(function(e){e[e.Chat=1]="Chat",e[e.User=2]="User",e[e.Message=3]="Message"})(ApplicationCommandTarget||(ApplicationCommandTarget={}));var ApplicationCommandTarget_1=commands.ApplicationCommandTarget=ApplicationCommandTarget,ApplicationCommandType;(function(e){e[e.BuiltIn=0]="BuiltIn",e[e.BuiltInText=1]="BuiltInText",e[e.BuiltInIntegration=2]="BuiltInIntegration",e[e.Bot=3]="Bot",e[e.Placeholder=4]="Placeholder"})(ApplicationCommandType||(ApplicationCommandType={}));var ApplicationCommandType_1=commands.ApplicationCommandType=ApplicationCommandType,ApplicationCommandPermissionType;(function(e){e[e.Role=1]="Role",e[e.User=2]="User"})(ApplicationCommandPermissionType||(ApplicationCommandPermissionType={})),commands.ApplicationCommandPermissionType=ApplicationCommandPermissionType;var ApplicationCommandOptionType;(function(e){e[e.SubCommand=1]="SubCommand",e[e.SubCommandGroup=2]="SubCommandGroup",e[e.String=3]="String",e[e.Integer=4]="Integer",e[e.Boolean=5]="Boolean",e[e.User=6]="User",e[e.Channel=7]="Channel",e[e.Role=8]="Role",e[e.Mentionnable=9]="Mentionnable",e[e.Number=10]="Number"})(ApplicationCommandOptionType||(ApplicationCommandOptionType={}));var ApplicationCommandOptionType_1=commands.ApplicationCommandOptionType=ApplicationCommandOptionType,InteractionTypes;(function(e){e[e.ApplicationCommand=2]="ApplicationCommand",e[e.MessageComponent=3]="MessageComponent"})(InteractionTypes||(InteractionTypes={})),commands.InteractionTypes=InteractionTypes;function getModule(e,n=!0){const o=Object.keys(modules).map(t=>Number(t)).find(t=>t>=940&&t<=968||t==199||t==432||t==433||t==444||t==445||t==456?!1:__r(t)&&e(__r(t)));if(o===void 0)return null;const a=modules[o].publicModule;return n?a.exports:a}window.getModule=getModule;var getRandomValues,rnds8=new Uint8Array(16);function rng(){if(!getRandomValues&&(getRandomValues=typeof crypto!="undefined"&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto)||typeof msCrypto!="undefined"&&typeof msCrypto.getRandomValues=="function"&&msCrypto.getRandomValues.bind(msCrypto),!getRandomValues))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return getRandomValues(rnds8)}var REGEX=/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;function validate(e){return typeof e=="string"&&REGEX.test(e)}for(var byteToHex=[],i=0;i<256;++i)byteToHex.push((i+256).toString(16).substr(1));function stringify(e){var n=arguments.length>1&&arguments[1]!==void 0?arguments[1]:0,o=(byteToHex[e[n+0]]+byteToHex[e[n+1]]+byteToHex[e[n+2]]+byteToHex[e[n+3]]+"-"+byteToHex[e[n+4]]+byteToHex[e[n+5]]+"-"+byteToHex[e[n+6]]+byteToHex[e[n+7]]+"-"+byteToHex[e[n+8]]+byteToHex[e[n+9]]+"-"+byteToHex[e[n+10]]+byteToHex[e[n+11]]+byteToHex[e[n+12]]+byteToHex[e[n+13]]+byteToHex[e[n+14]]+byteToHex[e[n+15]]).toLowerCase();if(!validate(o))throw TypeError("Stringified UUID is invalid");return o}function v4(e,n,o){e=e||{};var a=e.random||(e.rng||rng)();if(a[6]=a[6]&15|64,a[8]=a[8]&63|128,n){o=o||0;for(var t=0;t<16;++t)n[o+t]=a[t];return n}return stringify(a)}const linkingModule=getModule(e=>e.openURL);async function sendCommand(e,n=[]){return new Promise((o,a)=>{const t=v4(),c={command:e,id:t,params:n};linkingModule.openURL(`aliucord://${JSON.stringify(c)}`).then(()=>{const m=linkingModule.addEventListener("url",r=>{let s=r.url;if(!!s.includes("aliucord://")){s=decodeURIComponent(s.replace("aliucord://",""));try{const d=JSON.parse(s);if(d.id!==t||d.data===void 0)return;m.remove(),o(d)}catch{return}}})})})}function injectPluginsManager(){const e=getModule(r=>r.getBuiltInCommands,!1),n={id:"-3",type:0,name:"Aliucord"},o=e.exports.BUILT_IN_SECTIONS;e.exports.BUILT_IN_SECTIONS={...o,[n.id]:n};const a={id:"installed-plugins",applicationId:n.id,name:"plugins",description:"List installed plugins.",target:ApplicationCommandTarget_1.Chat,type:ApplicationCommandType_1.BuiltIn,execute:(r,s)=>{const d=s.channel;sendCommand("list-plugins").then(u=>{const l=u.data;sendReply_1(d.id,l==""?"No plugins installed.":`**Plugins installed (${l.split(",").length})**: ${l.split(",").join(", ")}`)})}},t={id:"install-plugin",applicationId:n.id,name:"install",description:"Install a plugin.",target:ApplicationCommandTarget_1.Chat,type:ApplicationCommandType_1.BuiltIn,options:[{name:"plugin",description:"Plugin url",required:!0,type:ApplicationCommandOptionType_1.String}],execute:(r,s)=>{const d=r[0].value,u=s.channel;sendCommand("install-plugin",[d]).then(l=>{sendReply_1(u.id,l.data)})}},c={id:"uninstall-plugin",applicationId:n.id,name:"uninstall",description:"Uninstall a plugin.",target:ApplicationCommandTarget_1.Chat,type:ApplicationCommandType_1.BuiltIn,options:[{name:"plugin",description:"Plugin name",required:!0,type:ApplicationCommandOptionType_1.String}],execute:(r,s)=>{const d=r[0].value,u=s.channel;sendCommand("uninstall-plugin",[d]).then(l=>{sendReply_1(u.id,l.data)})}};registerCommands_1([a,t,c])}var native={};Object.defineProperty(native,"__esModule",{value:!0});var getSystemVersion_1=native.getSystemVersion=getDevice_1=native.getDevice=getBuild_1=native.getBuild=getVersion_1=native.getVersion=reloadDiscord_1=native.reloadDiscord=void 0;const module_1=module$1,nativeModules=(0,module_1.getModule)(e=>e.NativeModules).NativeModules;function reloadDiscord(){nativeModules.BundleUpdaterManager.reload()}var reloadDiscord_1=native.reloadDiscord=reloadDiscord;function getVersion(){return nativeModules.InfoDictionaryManager.Version}var getVersion_1=native.getVersion=getVersion;function getBuild(){return nativeModules.InfoDictionaryManager.Build}var getBuild_1=native.getBuild=getBuild;function getDevice(){return nativeModules.DCDDeviceManager.device}var getDevice_1=native.getDevice=getDevice;function getSystemVersion(){return nativeModules.DCDDeviceManager.systemVersion}getSystemVersion_1=native.getSystemVersion=getSystemVersion;function injectCommands(){const e=[{id:"websocket-devtools",name:"websocket",description:"Connect to the websocket devtools.",applicationId:AliucordSectionID_1,target:ApplicationCommandTarget_1.Chat,type:ApplicationCommandType_1.BuiltIn,options:[{name:"host",description:"Host of the debugger.",type:ApplicationCommandOptionType_1.String,required:!0}],execute:n=>{const o=n[0].value;connectWebsocket(o)}},{id:"debug-command",name:"debug",description:"Print out your device information.",applicationId:AliucordSectionID_1,target:ApplicationCommandTarget_1.Chat,type:ApplicationCommandType_1.BuiltInText,execute:()=>{let n=`**Debug Info:**
`;return n+=`> Discord: ${getVersion_1()} (${getBuild_1()})
`,n+=`> Device: ${getDevice_1()}
`,n+=`> System: ${getSystemVersion_1()}
`,{content:n}}},{id:"reload-command",name:"reload",description:"Reload Discord.",applicationId:AliucordSectionID_1,target:ApplicationCommandTarget_1.Chat,type:ApplicationCommandType_1.BuiltIn,execute:function(n){reloadDiscord_1()}}];registerCommands_1(e)}try{setUpDebugWS(),injectPluginsManager(),injectCommands()}catch(e){console.error(e)}
